(()=>{"use strict";const n=2147483647,o=36,t=/^xn--/,e=/[^\0-\x7E]/,r=/[\x2E\u3002\uFF0E\uFF61]/g,c={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},i=Math.floor,s=String.fromCharCode;function u(n){throw new RangeError(c[n])}function f(n,o){const t=n.split("@");let e="";t.length>1&&(e=t[0]+"@",n=t[1]);const c=function(n,o){const t=[];let e=n.length;for(;e--;)t[e]=o(n[e]);return t}((n=n.replace(r,".")).split("."),o).join(".");return e+c}function l(n){const o=[];let t=0;const e=n.length;for(;t<e;){const r=n.charCodeAt(t++);if(r>=55296&&r<=56319&&t<e){const e=n.charCodeAt(t++);56320==(64512&e)?o.push(((1023&r)<<10)+(1023&e)+65536):(o.push(r),t--)}else o.push(r)}return o}const d=function(n,o){return n+22+75*(n<26)-((0!=o)<<5)},h=function(n,t,e){let r=0;for(n=e?i(n/700):n>>1,n+=i(n/t);n>455;r+=o)n=i(n/35);return i(r+36*n/(n+38))},a=function(t){const e=[],r=t.length;let c=0,s=128,f=72,l=t.lastIndexOf("-");l<0&&(l=0);for(let n=0;n<l;++n)t.charCodeAt(n)>=128&&u("not-basic"),e.push(t.charCodeAt(n));for(let a=l>0?l+1:0;a<r;){let l=c;for(let e=1,s=o;;s+=o){a>=r&&u("invalid-input");const l=(d=t.charCodeAt(a++))-48<10?d-22:d-65<26?d-65:d-97<26?d-97:o;(l>=o||l>i((n-c)/e))&&u("overflow"),c+=l*e;const h=s<=f?1:s>=f+26?26:s-f;if(l<h)break;const p=o-h;e>i(n/p)&&u("overflow"),e*=p}const p=e.length+1;f=h(c-l,p,0==l),i(c/p)>n-s&&u("overflow"),s+=i(c/p),c%=p,e.splice(c++,0,s)}var d;return String.fromCodePoint(...e)},p=function(t){const e=[];let r=(t=l(t)).length,c=128,f=0,a=72;for(const n of t)n<128&&e.push(s(n));let p=e.length,w=p;for(p&&e.push("-");w<r;){let r=n;for(const n of t)n>=c&&n<r&&(r=n);const l=w+1;r-c>i((n-f)/l)&&u("overflow"),f+=(r-c)*l,c=r;for(const r of t)if(r<c&&++f>n&&u("overflow"),r==c){let n=f;for(let t=o;;t+=o){const r=t<=a?1:t>=a+26?26:t-a;if(n<r)break;const c=n-r,u=o-r;e.push(s(d(r+c%u,0))),n=i(c/u)}e.push(s(d(n,0))),a=h(f,l,w==p),f=0,++w}++f,++c}return e.join("")},w={version:"2.1.0",ucs2:{decode:l,encode:n=>String.fromCodePoint(...n)},decode:a,encode:p,toASCII:function(n){return f(n,(function(n){return e.test(n)?"xn--"+p(n):n}))},toUnicode:function(n){return f(n,(function(n){return t.test(n)?a(n.slice(4).toLowerCase()):n}))}};window.encodePuny=function(n){return w.encode(n)},window.decodePuny=function(n){return w.decode(n)}})();